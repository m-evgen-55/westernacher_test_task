This web application manages user accounts in a database.
The application provides the ability: 
- to create user;
- to update user;
- to get user by user id;
- to get all users from db;
- to delete user by id.

When creating this service, the following technologies were used:
- Java 13;
- Springboot;
- Spring boot data jpa;
- Postgresql 10;
- Lombok;
- Swagger;
- JUnit 5.

1. Make sure you have Postgresql installed on your computer;
2. In application.properties add your db username and password.
3. Create local db named "westernacher";
4. Execute table creation script

CREATE TABLE public."users" (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	first_name varchar NOT NULL,
	last_name varchar NOT NULL,
	email varchar NOT NULL,
	birth_date date NOT NULL,
	CONSTRAINT user_id_pk PRIMARY KEY (id)
);

COMMENT ON COLUMN public."users".first_name IS 'User first name';
COMMENT ON COLUMN public."users".last_name IS 'User last name';
COMMENT ON COLUMN public."users".email IS 'User email';
COMMENT ON COLUMN public."users".birth_date IS 'User birth date';

5. Execute mvn clean install;
6. Launch the application;
7. To call controller methods you can use
- Postman or similar apps;
- Swagger http://localhost:8080/swagger-ui.html

An example of json that expected at the input of create user method:
{
	"firstName": "Ivan",
	"lastName": "Sidorov",
	"email": "ivan@yandex.ru",
	"birthDate": "1970-04-25"
}

Also implemented the ability to sort users when calling method /findAll.
Sort options:
- SORT_BY_FIRST_NAME_ASC;
- SORT_BY_FIRST_NAME_DESC;
- SORT_BY_LAST_NAME_ASC;
- SORT_BY_LAST_NAME_DESC;
- SORT_BY_EMAIL_ASC;
- SORT_BY_EMAIL_DESC;
- SORT_BY_BIRTH_DATE_ASC;
- SORT_BY_BIRTH_DATE_DESC.

An example of json that expected at the input of /findAll method:
{
	"sortUserDetails": "SORT_BY_BIRTH_DATE_DESC"
}

If you have any questions, please ask them by writing to marakhin.evgeny@gmail.com